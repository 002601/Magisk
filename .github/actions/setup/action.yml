name: Magisk Setup
inputs:
  is-asset-build:
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: "temurin"
        java-version: "17"

    - name: Set up Python 3
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Set up sccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        variant: sccache
        key: ${{ runner.os }}-${{ github.sha }}
        restore-keys: ${{ runner.os }}
        max-size: 10000M

    - name: Set up GNU make
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install make
        echo 'GNUMAKE=gmake' >> "$GITHUB_ENV"

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      if: inputs.is-asset-build == 'true'
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          !~/.gradle/caches/build-cache-*
        key: gradle-cache-${{ hashFiles('gradle/**') }}
        restore-keys: gradle-cache-

    - name: Restore Gradle dependencies
      uses: actions/cache/restore@v4
      if: inputs.is-asset-build == 'false'
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          !~/.gradle/caches/build-cache-*
        key: gradle-cache-${{ hashFiles('gradle/**') }}
        restore-keys: gradle-cache-

    - name: Cache Gradle build cache
      uses: actions/cache@v4
      if: inputs.is-asset-build == 'true'
      with:
        path: |
          ~/.gradle/caches/build-cache-*
        key: gradle-build-cache-${{ github.sha }}
        restore-keys: gradle-build-cache-

    - name: Restore Gradle build cache
      uses: actions/cache/restore@v4
      if: inputs.is-asset-build == 'false'
      with:
        path: |
          ~/.gradle/caches/build-cache-*
        key: gradle-build-cache-${{ github.sha }}
        restore-keys: gradle-build-cache-

    - name: Set up NDK
      run: python build.py -v ndk
      shell: bash
